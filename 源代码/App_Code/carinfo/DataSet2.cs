//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace hlbd.车辆信息 {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet2 : DataSet {
        
        private carinfoDataTable tablecarinfo;
        
        public DataSet2() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet2(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["carinfo"] != null)) {
                    this.Tables.Add(new carinfoDataTable(ds.Tables["carinfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public carinfoDataTable carinfo {
            get {
                return this.tablecarinfo;
            }
        }
        
        public override DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["carinfo"] != null)) {
                this.Tables.Add(new carinfoDataTable(ds.Tables["carinfo"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        public void InitVars() {
            this.tablecarinfo = ((carinfoDataTable)(this.Tables["carinfo"]));
            if ((this.tablecarinfo != null)) {
                this.tablecarinfo.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet2.xsd";
            this.Locale = new System.Globalization.CultureInfo("zh-CN");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablecarinfo = new carinfoDataTable();
            this.Tables.Add(this.tablecarinfo);
        }
        
        private bool ShouldSerializecarinfo() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void carinfoRowChangeEventHandler(object sender, carinfoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class carinfoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column序号;
            
            private DataColumn column车牌号;
            
            private DataColumn column车辆类型;
            
            private DataColumn column车辆名称;
            
            private DataColumn column车辆颜色;
            
            private DataColumn column车辆状态;
            
            private DataColumn column业务部编号;
            
            private DataColumn column公里数;
            
            private DataColumn column是否有效;
            
            private DataColumn column记录时间;
            
            private DataColumn column开始记录时间;
            
            private DataColumn column发动机号;
            
            private DataColumn column车架号;
            
            private DataColumn column防盗器号;
            
            private DataColumn column保险开始时间;
            
            private DataColumn column保险结束时间;
            
            private DataColumn column保险号;
            
            private DataColumn column保险类型;
            
            private DataColumn column保险公司;
            
            private DataColumn column油类型;
            
            private DataColumn column备注;
            
            private DataColumn column业务部序号;
            
            private DataColumn column车辆颜色序号;
            
            private DataColumn column车辆名称序号;
            
            private DataColumn column车辆状态序号;
            
            private DataColumn column车辆类型序号;
            
            public carinfoDataTable() : 
                    base("carinfo") {
                this.InitClass();
            }
            
            public carinfoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            public DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            public DataColumn 车牌号Column {
                get {
                    return this.column车牌号;
                }
            }
            
            public DataColumn 车辆类型Column {
                get {
                    return this.column车辆类型;
                }
            }
            
            public DataColumn 车辆名称Column {
                get {
                    return this.column车辆名称;
                }
            }
            
            public DataColumn 车辆颜色Column {
                get {
                    return this.column车辆颜色;
                }
            }
            
            public DataColumn 车辆状态Column {
                get {
                    return this.column车辆状态;
                }
            }
            
            public DataColumn 业务部编号Column {
                get {
                    return this.column业务部编号;
                }
            }
            
            public DataColumn 公里数Column {
                get {
                    return this.column公里数;
                }
            }
            
            public DataColumn 是否有效Column {
                get {
                    return this.column是否有效;
                }
            }
            
            public DataColumn 记录时间Column {
                get {
                    return this.column记录时间;
                }
            }
            
            public DataColumn 开始记录时间Column {
                get {
                    return this.column开始记录时间;
                }
            }
            
            public DataColumn 发动机号Column {
                get {
                    return this.column发动机号;
                }
            }
            
            public DataColumn 车架号Column {
                get {
                    return this.column车架号;
                }
            }
            
            public DataColumn 防盗器号Column {
                get {
                    return this.column防盗器号;
                }
            }
            
            public DataColumn 保险开始时间Column {
                get {
                    return this.column保险开始时间;
                }
            }
            
            public DataColumn 保险结束时间Column {
                get {
                    return this.column保险结束时间;
                }
            }
            
            public DataColumn 保险号Column {
                get {
                    return this.column保险号;
                }
            }
            
            public DataColumn 保险类型Column {
                get {
                    return this.column保险类型;
                }
            }
            
            public DataColumn 保险公司Column {
                get {
                    return this.column保险公司;
                }
            }
            
            public DataColumn 油类型Column {
                get {
                    return this.column油类型;
                }
            }
            
            public DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            public DataColumn 业务部序号Column {
                get {
                    return this.column业务部序号;
                }
            }
            
            public DataColumn 车辆颜色序号Column {
                get {
                    return this.column车辆颜色序号;
                }
            }
            
            public DataColumn 车辆名称序号Column {
                get {
                    return this.column车辆名称序号;
                }
            }
            
            public DataColumn 车辆状态序号Column {
                get {
                    return this.column车辆状态序号;
                }
            }
            
            public DataColumn 车辆类型序号Column {
                get {
                    return this.column车辆类型序号;
                }
            }
            
            public carinfoRow this[int index] {
                get {
                    return ((carinfoRow)(this.Rows[index]));
                }
            }
            
            public event carinfoRowChangeEventHandler carinfoRowChanged;
            
            public event carinfoRowChangeEventHandler carinfoRowChanging;
            
            public event carinfoRowChangeEventHandler carinfoRowDeleted;
            
            public event carinfoRowChangeEventHandler carinfoRowDeleting;
            
            public void AddcarinfoRow(carinfoRow row) {
                this.Rows.Add(row);
            }
            
            public carinfoRow AddcarinfoRow(
                        string 车牌号, 
                        string 车辆类型, 
                        string 车辆名称, 
                        string 车辆颜色, 
                        string 车辆状态, 
                        int 业务部编号, 
                        System.Decimal 公里数, 
                        string 是否有效, 
                        System.DateTime 记录时间, 
                        System.DateTime 开始记录时间, 
                        string 发动机号, 
                        string 车架号, 
                        string 防盗器号, 
                        System.DateTime 保险开始时间, 
                        System.DateTime 保险结束时间, 
                        string 保险号, 
                        string 保险类型, 
                        string 保险公司, 
                        string 油类型, 
                        string 备注, 
                        int 业务部序号, 
                        int 车辆颜色序号, 
                        int 车辆名称序号, 
                        int 车辆状态序号, 
                        string 车辆类型序号) {
                carinfoRow rowcarinfoRow = ((carinfoRow)(this.NewRow()));
                rowcarinfoRow.ItemArray = new object[] {
                        null,
                        车牌号,
                        车辆类型,
                        车辆名称,
                        车辆颜色,
                        车辆状态,
                        业务部编号,
                        公里数,
                        是否有效,
                        记录时间,
                        开始记录时间,
                        发动机号,
                        车架号,
                        防盗器号,
                        保险开始时间,
                        保险结束时间,
                        保险号,
                        保险类型,
                        保险公司,
                        油类型,
                        备注,
                        业务部序号,
                        车辆颜色序号,
                        车辆名称序号,
                        车辆状态序号,
                        车辆类型序号};
                this.Rows.Add(rowcarinfoRow);
                return rowcarinfoRow;
            }
            
            public carinfoRow FindBy序号车牌号(int 序号, string 车牌号) {
                return ((carinfoRow)(this.Rows.Find(new object[] {
                            序号,
                            车牌号})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                carinfoDataTable cln = ((carinfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new carinfoDataTable();
            }
            
            public void InitVars() {
                this.column序号 = this.Columns["序号"];
                this.column车牌号 = this.Columns["车牌号"];
                this.column车辆类型 = this.Columns["车辆类型"];
                this.column车辆名称 = this.Columns["车辆名称"];
                this.column车辆颜色 = this.Columns["车辆颜色"];
                this.column车辆状态 = this.Columns["车辆状态"];
                this.column业务部编号 = this.Columns["业务部编号"];
                this.column公里数 = this.Columns["公里数"];
                this.column是否有效 = this.Columns["是否有效"];
                this.column记录时间 = this.Columns["记录时间"];
                this.column开始记录时间 = this.Columns["开始记录时间"];
                this.column发动机号 = this.Columns["发动机号"];
                this.column车架号 = this.Columns["车架号"];
                this.column防盗器号 = this.Columns["防盗器号"];
                this.column保险开始时间 = this.Columns["保险开始时间"];
                this.column保险结束时间 = this.Columns["保险结束时间"];
                this.column保险号 = this.Columns["保险号"];
                this.column保险类型 = this.Columns["保险类型"];
                this.column保险公司 = this.Columns["保险公司"];
                this.column油类型 = this.Columns["油类型"];
                this.column备注 = this.Columns["备注"];
                this.column业务部序号 = this.Columns["业务部序号"];
                this.column车辆颜色序号 = this.Columns["车辆颜色序号"];
                this.column车辆名称序号 = this.Columns["车辆名称序号"];
                this.column车辆状态序号 = this.Columns["车辆状态序号"];
                this.column车辆类型序号 = this.Columns["车辆类型序号"];
            }
            
            private void InitClass() {
                this.column序号 = new DataColumn("序号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column序号);
                this.column车牌号 = new DataColumn("车牌号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车牌号);
                this.column车辆类型 = new DataColumn("车辆类型", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆类型);
                this.column车辆名称 = new DataColumn("车辆名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆名称);
                this.column车辆颜色 = new DataColumn("车辆颜色", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆颜色);
                this.column车辆状态 = new DataColumn("车辆状态", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆状态);
                this.column业务部编号 = new DataColumn("业务部编号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column业务部编号);
                this.column公里数 = new DataColumn("公里数", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column公里数);
                this.column是否有效 = new DataColumn("是否有效", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column是否有效);
                this.column记录时间 = new DataColumn("记录时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column记录时间);
                this.column开始记录时间 = new DataColumn("开始记录时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column开始记录时间);
                this.column发动机号 = new DataColumn("发动机号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column发动机号);
                this.column车架号 = new DataColumn("车架号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车架号);
                this.column防盗器号 = new DataColumn("防盗器号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column防盗器号);
                this.column保险开始时间 = new DataColumn("保险开始时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保险开始时间);
                this.column保险结束时间 = new DataColumn("保险结束时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保险结束时间);
                this.column保险号 = new DataColumn("保险号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保险号);
                this.column保险类型 = new DataColumn("保险类型", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保险类型);
                this.column保险公司 = new DataColumn("保险公司", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column保险公司);
                this.column油类型 = new DataColumn("油类型", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column油类型);
                this.column备注 = new DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column备注);
                this.column业务部序号 = new DataColumn("业务部序号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column业务部序号);
                this.column车辆颜色序号 = new DataColumn("车辆颜色序号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆颜色序号);
                this.column车辆名称序号 = new DataColumn("车辆名称序号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆名称序号);
                this.column车辆状态序号 = new DataColumn("车辆状态序号", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆状态序号);
                this.column车辆类型序号 = new DataColumn("车辆类型序号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column车辆类型序号);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.column序号,
                                this.column车牌号}, true));
                this.column序号.AutoIncrement = true;
                this.column序号.AllowDBNull = false;
                this.column序号.ReadOnly = true;
                this.column车牌号.AllowDBNull = false;
            }
            
            public carinfoRow NewcarinfoRow() {
                return ((carinfoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new carinfoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(carinfoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.carinfoRowChanged != null)) {
                    this.carinfoRowChanged(this, new carinfoRowChangeEvent(((carinfoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.carinfoRowChanging != null)) {
                    this.carinfoRowChanging(this, new carinfoRowChangeEvent(((carinfoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.carinfoRowDeleted != null)) {
                    this.carinfoRowDeleted(this, new carinfoRowChangeEvent(((carinfoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.carinfoRowDeleting != null)) {
                    this.carinfoRowDeleting(this, new carinfoRowChangeEvent(((carinfoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovecarinfoRow(carinfoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class carinfoRow : DataRow {
            
            private carinfoDataTable tablecarinfo;
            
            public carinfoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablecarinfo = ((carinfoDataTable)(this.Table));
            }
            
            public int 序号 {
                get {
                    return ((int)(this[this.tablecarinfo.序号Column]));
                }
                set {
                    this[this.tablecarinfo.序号Column] = value;
                }
            }
            
            public string 车牌号 {
                get {
                    return ((string)(this[this.tablecarinfo.车牌号Column]));
                }
                set {
                    this[this.tablecarinfo.车牌号Column] = value;
                }
            }
            
            public string 车辆类型 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车辆类型Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆类型Column] = value;
                }
            }
            
            public string 车辆名称 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车辆名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆名称Column] = value;
                }
            }
            
            public string 车辆颜色 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车辆颜色Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆颜色Column] = value;
                }
            }
            
            public string 车辆状态 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车辆状态Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆状态Column] = value;
                }
            }
            
            public int 业务部编号 {
                get {
                    try {
                        return ((int)(this[this.tablecarinfo.业务部编号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.业务部编号Column] = value;
                }
            }
            
            public System.Decimal 公里数 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablecarinfo.公里数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.公里数Column] = value;
                }
            }
            
            public string 是否有效 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.是否有效Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.是否有效Column] = value;
                }
            }
            
            public System.DateTime 记录时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablecarinfo.记录时间Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.记录时间Column] = value;
                }
            }
            
            public System.DateTime 开始记录时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablecarinfo.开始记录时间Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.开始记录时间Column] = value;
                }
            }
            
            public string 发动机号 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.发动机号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.发动机号Column] = value;
                }
            }
            
            public string 车架号 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车架号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车架号Column] = value;
                }
            }
            
            public string 防盗器号 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.防盗器号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.防盗器号Column] = value;
                }
            }
            
            public System.DateTime 保险开始时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablecarinfo.保险开始时间Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.保险开始时间Column] = value;
                }
            }
            
            public System.DateTime 保险结束时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablecarinfo.保险结束时间Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.保险结束时间Column] = value;
                }
            }
            
            public string 保险号 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.保险号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.保险号Column] = value;
                }
            }
            
            public string 保险类型 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.保险类型Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.保险类型Column] = value;
                }
            }
            
            public string 保险公司 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.保险公司Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.保险公司Column] = value;
                }
            }
            
            public string 油类型 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.油类型Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.油类型Column] = value;
                }
            }
            
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.备注Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.备注Column] = value;
                }
            }
            
            public int 业务部序号 {
                get {
                    try {
                        return ((int)(this[this.tablecarinfo.业务部序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.业务部序号Column] = value;
                }
            }
            
            public int 车辆颜色序号 {
                get {
                    try {
                        return ((int)(this[this.tablecarinfo.车辆颜色序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆颜色序号Column] = value;
                }
            }
            
            public int 车辆名称序号 {
                get {
                    try {
                        return ((int)(this[this.tablecarinfo.车辆名称序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆名称序号Column] = value;
                }
            }
            
            public int 车辆状态序号 {
                get {
                    try {
                        return ((int)(this[this.tablecarinfo.车辆状态序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆状态序号Column] = value;
                }
            }
            
            public string 车辆类型序号 {
                get {
                    try {
                        return ((string)(this[this.tablecarinfo.车辆类型序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablecarinfo.车辆类型序号Column] = value;
                }
            }
            
            public bool Is车辆类型Null() {
                return this.IsNull(this.tablecarinfo.车辆类型Column);
            }
            
            public void Set车辆类型Null() {
                this[this.tablecarinfo.车辆类型Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆名称Null() {
                return this.IsNull(this.tablecarinfo.车辆名称Column);
            }
            
            public void Set车辆名称Null() {
                this[this.tablecarinfo.车辆名称Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆颜色Null() {
                return this.IsNull(this.tablecarinfo.车辆颜色Column);
            }
            
            public void Set车辆颜色Null() {
                this[this.tablecarinfo.车辆颜色Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆状态Null() {
                return this.IsNull(this.tablecarinfo.车辆状态Column);
            }
            
            public void Set车辆状态Null() {
                this[this.tablecarinfo.车辆状态Column] = System.Convert.DBNull;
            }
            
            public bool Is业务部编号Null() {
                return this.IsNull(this.tablecarinfo.业务部编号Column);
            }
            
            public void Set业务部编号Null() {
                this[this.tablecarinfo.业务部编号Column] = System.Convert.DBNull;
            }
            
            public bool Is公里数Null() {
                return this.IsNull(this.tablecarinfo.公里数Column);
            }
            
            public void Set公里数Null() {
                this[this.tablecarinfo.公里数Column] = System.Convert.DBNull;
            }
            
            public bool Is是否有效Null() {
                return this.IsNull(this.tablecarinfo.是否有效Column);
            }
            
            public void Set是否有效Null() {
                this[this.tablecarinfo.是否有效Column] = System.Convert.DBNull;
            }
            
            public bool Is记录时间Null() {
                return this.IsNull(this.tablecarinfo.记录时间Column);
            }
            
            public void Set记录时间Null() {
                this[this.tablecarinfo.记录时间Column] = System.Convert.DBNull;
            }
            
            public bool Is开始记录时间Null() {
                return this.IsNull(this.tablecarinfo.开始记录时间Column);
            }
            
            public void Set开始记录时间Null() {
                this[this.tablecarinfo.开始记录时间Column] = System.Convert.DBNull;
            }
            
            public bool Is发动机号Null() {
                return this.IsNull(this.tablecarinfo.发动机号Column);
            }
            
            public void Set发动机号Null() {
                this[this.tablecarinfo.发动机号Column] = System.Convert.DBNull;
            }
            
            public bool Is车架号Null() {
                return this.IsNull(this.tablecarinfo.车架号Column);
            }
            
            public void Set车架号Null() {
                this[this.tablecarinfo.车架号Column] = System.Convert.DBNull;
            }
            
            public bool Is防盗器号Null() {
                return this.IsNull(this.tablecarinfo.防盗器号Column);
            }
            
            public void Set防盗器号Null() {
                this[this.tablecarinfo.防盗器号Column] = System.Convert.DBNull;
            }
            
            public bool Is保险开始时间Null() {
                return this.IsNull(this.tablecarinfo.保险开始时间Column);
            }
            
            public void Set保险开始时间Null() {
                this[this.tablecarinfo.保险开始时间Column] = System.Convert.DBNull;
            }
            
            public bool Is保险结束时间Null() {
                return this.IsNull(this.tablecarinfo.保险结束时间Column);
            }
            
            public void Set保险结束时间Null() {
                this[this.tablecarinfo.保险结束时间Column] = System.Convert.DBNull;
            }
            
            public bool Is保险号Null() {
                return this.IsNull(this.tablecarinfo.保险号Column);
            }
            
            public void Set保险号Null() {
                this[this.tablecarinfo.保险号Column] = System.Convert.DBNull;
            }
            
            public bool Is保险类型Null() {
                return this.IsNull(this.tablecarinfo.保险类型Column);
            }
            
            public void Set保险类型Null() {
                this[this.tablecarinfo.保险类型Column] = System.Convert.DBNull;
            }
            
            public bool Is保险公司Null() {
                return this.IsNull(this.tablecarinfo.保险公司Column);
            }
            
            public void Set保险公司Null() {
                this[this.tablecarinfo.保险公司Column] = System.Convert.DBNull;
            }
            
            public bool Is油类型Null() {
                return this.IsNull(this.tablecarinfo.油类型Column);
            }
            
            public void Set油类型Null() {
                this[this.tablecarinfo.油类型Column] = System.Convert.DBNull;
            }
            
            public bool Is备注Null() {
                return this.IsNull(this.tablecarinfo.备注Column);
            }
            
            public void Set备注Null() {
                this[this.tablecarinfo.备注Column] = System.Convert.DBNull;
            }
            
            public bool Is业务部序号Null() {
                return this.IsNull(this.tablecarinfo.业务部序号Column);
            }
            
            public void Set业务部序号Null() {
                this[this.tablecarinfo.业务部序号Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆颜色序号Null() {
                return this.IsNull(this.tablecarinfo.车辆颜色序号Column);
            }
            
            public void Set车辆颜色序号Null() {
                this[this.tablecarinfo.车辆颜色序号Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆名称序号Null() {
                return this.IsNull(this.tablecarinfo.车辆名称序号Column);
            }
            
            public void Set车辆名称序号Null() {
                this[this.tablecarinfo.车辆名称序号Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆状态序号Null() {
                return this.IsNull(this.tablecarinfo.车辆状态序号Column);
            }
            
            public void Set车辆状态序号Null() {
                this[this.tablecarinfo.车辆状态序号Column] = System.Convert.DBNull;
            }
            
            public bool Is车辆类型序号Null() {
                return this.IsNull(this.tablecarinfo.车辆类型序号Column);
            }
            
            public void Set车辆类型序号Null() {
                this[this.tablecarinfo.车辆类型序号Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class carinfoRowChangeEvent : EventArgs {
            
            private carinfoRow eventRow;
            
            private DataRowAction eventAction;
            
            public carinfoRowChangeEvent(carinfoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public carinfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
